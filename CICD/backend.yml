name: Backend - CI/CD to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: asia-southeast1
  GAR_ZONE: asia-southeast1
  GAR_REPO: app-repo
  IMAGE_NAME: be-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Authenticate ke Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # ---------- STATIC ANALYSIS ----------
      - name: Run Linter
        run: |
          npm ci
          npm run lint

      # ---------- UNIT TESTS ----------
      - name: Run Unit Tests
        run: |
          npm test -- --ci --passWithNoTests

      # ---------- INTEGRATION TESTS ----------
      - name: Run Integration Tests
        run: |
          npm run test:integration || echo "Integration tests skipped"

      # ---------- BUILD & PUSH IMAGE ----------
      - name: Build Docker Image
        run: |
          docker build -t "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_NAME:$IMAGE_TAG" .

      - name: Push Docker Image
        run: |
          gcloud auth configure-docker $GAR_ZONE-docker.pkg.dev
          docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_NAME:$IMAGE_TAG"

      # ---------- DEPLOY TO GKE ----------
      - name: Deploy to GKE
        run: |
          sed -i "s|IMAGE_TAG|${{ env.IMAGE_TAG }}|g" k8s/deploy.yml
          kubectl apply -f k8s/deploy.yml
          kubectl rollout status deployment/backend
